class Property:
    def __init__(self,square_feet= '',beds ='',baths ='',**kwargs):
        super().__init__(**kwargs)
        self.square_feet =square_feet
        self.num_bed= beds
        self.num_baths = baths
    def display(self):
        print("PROPERTY DEATAILS")
        print("=================")
        print("Square Footage : {}".format(self.square_feet))
        print("Bedrooms :{}".format(self.num_bed))
        print("Bathrooms : ".format(self.num_baths))
        print()
    def prompt_init(self):
        return dict(square_feet=input("Enter the Square feet : "),
                    beds =input("Enter number of bedrooms "),
                    baths = input("Enter number of baths : "))
    prompt_init = staticmethod(prompt_init())

class Apartment(Property):
    valid_laundries = ("Coin","ensuite","none")
    valid_balconies = ("yes","no","Solarium")

    def __init__(self,balconny ='',laundry= '',**kwargs):
        super().__init__(**kwargs)
        self.balcony = balconny
        self.laundry = laundry

    def display(self):
        print("Appartment Details")
        print("Laundry : %s" %self.laundry )
        print("Has Balcony : %s" %self.balcony)

    def prompt_init(self):
        parent_init = Property.prompt_init()
        laundry = ''
        while laundry.lower() not in Apartment.valid_laundries:
            laundry = input("What laundry facilities does "
                            "the property have ?({}".format(','.join(Apartment.valid_laundries)))
        balcony = ''
        while balcony.lower() not in Apartment.valid_balconies:
            balcony = input(
                "Does the property have a balcony? "
                "({})".format(
                    ", ".join(Apartment.valid_balconies)))
            parent_init.update({
                "laundry ": laundry,
                "balcony" : balcony
            })
            return parent_init
    prompt_init = staticmethod(prompt_init)



